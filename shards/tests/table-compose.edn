(defwire wire-1
  (Log "Table")
  (Take "b")
  (Math.Add 2) ; Do an add to make sure the type is correct
  (Log "Table b value + 2"))

(defwire wire-2
  (Log "Table")
  (Take "d")
  (Math.Add 2) ; Do an add to make sure the type is correct
  (Log "Table d value + 2"))

(defwire wire-3
  (Log "Table")
  (| (Take "e") (Msg "Table e value"))
  (| (Take "f") (Math.Add 1.0) ; Do an add to make sure the type is correct
     (Log "Table f value + 2")))

(defwire main-wire
  {:a 0 :b 1 :c 2} >= .table
  .table (Do wire-1)

  ; This should update b in the table
  4 (Update .table :Key "b")
  .table (Do wire-1)

  5 (Set .table :Key "d")
  .table (Do wire-2)

  "str" (Set .table :Key "e")
  3.14 (Set .table :Key "f")

  "str-updated" (Update .table :Key "e")
  3.15 (Update .table :Key "f")

  .table (Do wire-3))

(defmesh root)
(schedule root main-wire)
(if (run main-wire) nil (throw "Root tick failed"))
